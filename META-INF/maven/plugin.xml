<?xml version="1.0" encoding="UTF-8"?>

<!-- Generated by maven-plugin-tools 3.6 -->

<plugin>
  <name>Apache Avro Maven Plugin</name>
  <description>Maven plugin for Avro IDL and Specific API Compilers</description>
  <groupId>org.apache.avro</groupId>
  <artifactId>avro-maven-plugin</artifactId>
  <version>1.11.1</version>
  <goalPrefix>avro</goalPrefix>
  <isolatedRealm>false</isolatedRealm>
  <inheritedByDefault>true</inheritedByDefault>
  <mojos>
    <mojo>
      <goal>help</goal>
      <description>Display help information on avro-maven-plugin.&lt;br&gt;
Call &lt;code&gt;mvn avro:help -Ddetail=true -Dgoal=&amp;lt;goal-name&amp;gt;&lt;/code&gt; to display parameter details.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>false</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.avro.mojo.HelpMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>detail</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>If &lt;code&gt;true&lt;/code&gt;, display all settable properties for each goal.</description>
        </parameter>
        <parameter>
          <name>goal</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The name of the goal for which to show help. If unspecified, all goals will be displayed.</description>
        </parameter>
        <parameter>
          <name>indentSize</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The number of spaces per indentation level, should be positive.</description>
        </parameter>
        <parameter>
          <name>lineLength</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The maximum length of a display line, should be positive.</description>
        </parameter>
      </parameters>
      <configuration>
        <detail implementation="boolean" default-value="false">${detail}</detail>
        <goal implementation="java.lang.String">${goal}</goal>
        <indentSize implementation="int" default-value="2">${indentSize}</indentSize>
        <lineLength implementation="int" default-value="80">${lineLength}</lineLength>
      </configuration>
    </mojo>
    <mojo>
      <goal>idl-protocol</goal>
      <description>Generate Java classes and interfaces from AvroIDL files (.avdl)</description>
      <requiresDependencyResolution>runtime</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>generate-sources</phase>
      <implementation>org.apache.avro.mojo.IDLProtocolMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>createOptionalGetters</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>The createOptionalGetters parameter enables generating the getOptional...
methods that return an Optional of the requested type. This works ONLY on
Java 8+</description>
        </parameter>
        <parameter>
          <name>createSetters</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Determines whether or not to create setters for the fields of the record. The
default is to create setters.</description>
        </parameter>
        <parameter>
          <name>customConversions</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>A set of fully qualified class names of custom
{@link org.apache.avro.Conversion} implementations to add to the compiler.
The classes must be on the classpath at compile time and whenever the Java
objects are serialized.</description>
        </parameter>
        <parameter>
          <name>customLogicalTypeFactories</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>A set of fully qualified class names of custom
{@link org.apache.avro.LogicalTypes.LogicalTypeFactory} implementations to
add to the compiler. The classes must be on the classpath at compile time and
whenever the Java objects are serialized.</description>
        </parameter>
        <parameter>
          <name>enableDecimalLogicalType</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Determines whether or not to use Java classes for decimal types</description>
        </parameter>
        <parameter>
          <name>excludes</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>A set of Ant-like exclusion patterns used to prevent certain files from being
processed. By default, this set is empty such that no files are excluded.</description>
        </parameter>
        <parameter>
          <name>fieldVisibility</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The field visibility indicator for the fields of the generated class, as
string values of SpecificCompiler.FieldVisibility. The text is case
insensitive.</description>
        </parameter>
        <parameter>
          <name>gettersReturnOptional</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>The gettersReturnOptional parameter enables generating get... methods that
return an Optional of the requested type. This will replace the This works
ONLY on Java 8+</description>
        </parameter>
        <parameter>
          <name>imports</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>A list of files or directories that should be compiled first thus making them
importable by subsequently compiled schemas. Note that imported files should
not reference each other.</description>
        </parameter>
        <parameter>
          <name>includes</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>A set of Ant-like inclusion patterns used to select files from the source
directory for processing. By default, the pattern &lt;code&gt;**&amp;#47;*.avdl&lt;/code&gt;
is used to select IDL files.</description>
        </parameter>
        <parameter>
          <name>optionalGettersForNullableFieldsOnly</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>The optionalGettersForNullableFieldsOnly parameter works in conjunction with
gettersReturnOptional option. If it is set, Optional getters will be
generated only for fields that are nullable. If the field is mandatory,
regular getter will be generated. This works ONLY on Java 8+.</description>
        </parameter>
        <parameter>
          <name>outputDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The current Maven project.</description>
        </parameter>
        <parameter>
          <name>sourceDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The source directory of avro files. This directory is added to the classpath
at schema compiling time. All files can therefore be referenced as classpath
resources following the directory structure under the source directory.</description>
        </parameter>
        <parameter>
          <name>stringType</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The Java type to use for Avro strings. May be one of CharSequence, String or
Utf8. CharSequence by default.</description>
        </parameter>
        <parameter>
          <name>templateDirectory</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The directory (within the java classpath) that contains the velocity
templates to use for code generation. The default value points to the
templates included with the avro-maven-plugin.</description>
        </parameter>
        <parameter>
          <name>testExcludes</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>A set of Ant-like exclusion patterns used to prevent certain files from being
processed. By default, this set is empty such that no files are excluded.</description>
        </parameter>
        <parameter>
          <name>testIncludes</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>A set of Ant-like inclusion patterns used to select files from the source
directory for processing. By default, the pattern &lt;code&gt;**&amp;#47;*.avdl&lt;/code&gt;
is used to select IDL files.</description>
        </parameter>
        <parameter>
          <name>testOutputDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>testSourceDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>velocityToolsClassesNames</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>The qualified names of classes which the plugin will look up, instantiate
(through an empty constructor that must exist) and set up to be injected into
Velocity templates by Avro compiler.</description>
        </parameter>
      </parameters>
      <configuration>
        <createOptionalGetters implementation="boolean">${createOptionalGetters}</createOptionalGetters>
        <createSetters implementation="boolean" default-value="true"/>
        <customConversions implementation="java.lang.String[]">${customConversions}</customConversions>
        <customLogicalTypeFactories implementation="java.lang.String[]">${customLogicalTypeFactories}</customLogicalTypeFactories>
        <enableDecimalLogicalType implementation="boolean" default-value="false"/>
        <fieldVisibility implementation="java.lang.String" default-value="PRIVATE"/>
        <gettersReturnOptional implementation="boolean">${gettersReturnOptional}</gettersReturnOptional>
        <optionalGettersForNullableFieldsOnly implementation="boolean">${optionalGettersForNullableFieldsOnly}</optionalGettersForNullableFieldsOnly>
        <outputDirectory implementation="java.io.File" default-value="${project.build.directory}/generated-sources/avro">${outputDirectory}</outputDirectory>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <sourceDirectory implementation="java.io.File" default-value="${basedir}/src/main/avro">${sourceDirectory}</sourceDirectory>
        <stringType implementation="java.lang.String">${stringType}</stringType>
        <templateDirectory implementation="java.lang.String">${templateDirectory}</templateDirectory>
        <testOutputDirectory implementation="java.io.File" default-value="${project.build.directory}/generated-test-sources/avro">${outputDirectory}</testOutputDirectory>
        <testSourceDirectory implementation="java.io.File" default-value="${basedir}/src/test/avro">${sourceDirectory}</testSourceDirectory>
        <velocityToolsClassesNames implementation="java.lang.String[]">${velocityToolsClassesNames}</velocityToolsClassesNames>
      </configuration>
    </mojo>
    <mojo>
      <goal>induce</goal>
      <description>Generate Avro files (.avsc and .avpr) from Java classes or interfaces</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>process-classes</phase>
      <implementation>org.apache.avro.mojo.InduceMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>allowNull</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to use ReflectData.AllowNull.</description>
        </parameter>
        <parameter>
          <name>avroOutputDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Directory where to output Avro schemas (.avsc) or protocols (.avpr).</description>
        </parameter>
        <parameter>
          <name>encoding</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The output encoding.</description>
        </parameter>
        <parameter>
          <name>javaSourceDirectories</name>
          <type>java.io.File[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>The Java source directories.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The current Maven project.</description>
        </parameter>
        <parameter>
          <name>reflectDataImplementation</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Override the default ReflectData implementation with an extension. Must be a
subclass of ReflectData.</description>
        </parameter>
      </parameters>
      <configuration>
        <allowNull implementation="boolean" default-value="false"/>
        <avroOutputDirectory implementation="java.io.File" default-value="${project.build.directory}/generated-resources/avro">${avroOutputDirectory}</avroOutputDirectory>
        <encoding implementation="java.lang.String" default-value="${project.build.sourceEncoding}"/>
        <javaSourceDirectories implementation="java.io.File[]" default-value="${basedir}/src/main/java">${javaSourceDirectories}</javaSourceDirectories>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <reflectDataImplementation implementation="java.lang.String">${reflectDataImplementation}</reflectDataImplementation>
      </configuration>
    </mojo>
    <mojo>
      <goal>protocol</goal>
      <description>Generate Java classes and interfaces from Avro protocol files (.avpr)</description>
      <requiresDependencyResolution>runtime</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>generate-sources</phase>
      <implementation>org.apache.avro.mojo.ProtocolMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>createOptionalGetters</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>The createOptionalGetters parameter enables generating the getOptional...
methods that return an Optional of the requested type. This works ONLY on
Java 8+</description>
        </parameter>
        <parameter>
          <name>createSetters</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Determines whether or not to create setters for the fields of the record. The
default is to create setters.</description>
        </parameter>
        <parameter>
          <name>customConversions</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>A set of fully qualified class names of custom
{@link org.apache.avro.Conversion} implementations to add to the compiler.
The classes must be on the classpath at compile time and whenever the Java
objects are serialized.</description>
        </parameter>
        <parameter>
          <name>customLogicalTypeFactories</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>A set of fully qualified class names of custom
{@link org.apache.avro.LogicalTypes.LogicalTypeFactory} implementations to
add to the compiler. The classes must be on the classpath at compile time and
whenever the Java objects are serialized.</description>
        </parameter>
        <parameter>
          <name>enableDecimalLogicalType</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Determines whether or not to use Java classes for decimal types</description>
        </parameter>
        <parameter>
          <name>excludes</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>A set of Ant-like exclusion patterns used to prevent certain files from being
processed. By default, this set is empty such that no files are excluded.</description>
        </parameter>
        <parameter>
          <name>fieldVisibility</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The field visibility indicator for the fields of the generated class, as
string values of SpecificCompiler.FieldVisibility. The text is case
insensitive.</description>
        </parameter>
        <parameter>
          <name>gettersReturnOptional</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>The gettersReturnOptional parameter enables generating get... methods that
return an Optional of the requested type. This will replace the This works
ONLY on Java 8+</description>
        </parameter>
        <parameter>
          <name>imports</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>A list of files or directories that should be compiled first thus making them
importable by subsequently compiled schemas. Note that imported files should
not reference each other.</description>
        </parameter>
        <parameter>
          <name>includes</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>A set of Ant-like inclusion patterns used to select files from the source
directory for processing. By default, the pattern &lt;code&gt;**&amp;#47;*.avpr&lt;/code&gt;
is used to select grammar files.</description>
        </parameter>
        <parameter>
          <name>optionalGettersForNullableFieldsOnly</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>The optionalGettersForNullableFieldsOnly parameter works in conjunction with
gettersReturnOptional option. If it is set, Optional getters will be
generated only for fields that are nullable. If the field is mandatory,
regular getter will be generated. This works ONLY on Java 8+.</description>
        </parameter>
        <parameter>
          <name>outputDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The current Maven project.</description>
        </parameter>
        <parameter>
          <name>sourceDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The source directory of avro files. This directory is added to the classpath
at schema compiling time. All files can therefore be referenced as classpath
resources following the directory structure under the source directory.</description>
        </parameter>
        <parameter>
          <name>stringType</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The Java type to use for Avro strings. May be one of CharSequence, String or
Utf8. CharSequence by default.</description>
        </parameter>
        <parameter>
          <name>templateDirectory</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The directory (within the java classpath) that contains the velocity
templates to use for code generation. The default value points to the
templates included with the avro-maven-plugin.</description>
        </parameter>
        <parameter>
          <name>testExcludes</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>A set of Ant-like exclusion patterns used to prevent certain files from being
processed. By default, this set is empty such that no files are excluded.</description>
        </parameter>
        <parameter>
          <name>testIncludes</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>A set of Ant-like inclusion patterns used to select files from the source
directory for processing. By default, the pattern &lt;code&gt;**&amp;#47;*.avpr&lt;/code&gt;
is used to select grammar files.</description>
        </parameter>
        <parameter>
          <name>testOutputDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>testSourceDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>velocityToolsClassesNames</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>The qualified names of classes which the plugin will look up, instantiate
(through an empty constructor that must exist) and set up to be injected into
Velocity templates by Avro compiler.</description>
        </parameter>
      </parameters>
      <configuration>
        <createOptionalGetters implementation="boolean">${createOptionalGetters}</createOptionalGetters>
        <createSetters implementation="boolean" default-value="true"/>
        <customConversions implementation="java.lang.String[]">${customConversions}</customConversions>
        <customLogicalTypeFactories implementation="java.lang.String[]">${customLogicalTypeFactories}</customLogicalTypeFactories>
        <enableDecimalLogicalType implementation="boolean" default-value="false"/>
        <fieldVisibility implementation="java.lang.String" default-value="PRIVATE"/>
        <gettersReturnOptional implementation="boolean">${gettersReturnOptional}</gettersReturnOptional>
        <optionalGettersForNullableFieldsOnly implementation="boolean">${optionalGettersForNullableFieldsOnly}</optionalGettersForNullableFieldsOnly>
        <outputDirectory implementation="java.io.File" default-value="${project.build.directory}/generated-sources/avro">${outputDirectory}</outputDirectory>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <sourceDirectory implementation="java.io.File" default-value="${basedir}/src/main/avro">${sourceDirectory}</sourceDirectory>
        <stringType implementation="java.lang.String">${stringType}</stringType>
        <templateDirectory implementation="java.lang.String">${templateDirectory}</templateDirectory>
        <testOutputDirectory implementation="java.io.File" default-value="${project.build.directory}/generated-test-sources/avro">${outputDirectory}</testOutputDirectory>
        <testSourceDirectory implementation="java.io.File" default-value="${basedir}/src/test/avro">${sourceDirectory}</testSourceDirectory>
        <velocityToolsClassesNames implementation="java.lang.String[]">${velocityToolsClassesNames}</velocityToolsClassesNames>
      </configuration>
    </mojo>
    <mojo>
      <goal>schema</goal>
      <description>Generate Java classes from Avro schema files (.avsc)</description>
      <requiresDependencyResolution>runtime+test</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>generate-sources</phase>
      <implementation>org.apache.avro.mojo.SchemaMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>createOptionalGetters</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>The createOptionalGetters parameter enables generating the getOptional...
methods that return an Optional of the requested type. This works ONLY on
Java 8+</description>
        </parameter>
        <parameter>
          <name>createSetters</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Determines whether or not to create setters for the fields of the record. The
default is to create setters.</description>
        </parameter>
        <parameter>
          <name>customConversions</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>A set of fully qualified class names of custom
{@link org.apache.avro.Conversion} implementations to add to the compiler.
The classes must be on the classpath at compile time and whenever the Java
objects are serialized.</description>
        </parameter>
        <parameter>
          <name>customLogicalTypeFactories</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>A set of fully qualified class names of custom
{@link org.apache.avro.LogicalTypes.LogicalTypeFactory} implementations to
add to the compiler. The classes must be on the classpath at compile time and
whenever the Java objects are serialized.</description>
        </parameter>
        <parameter>
          <name>enableDecimalLogicalType</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Determines whether or not to use Java classes for decimal types</description>
        </parameter>
        <parameter>
          <name>excludes</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>A set of Ant-like exclusion patterns used to prevent certain files from being
processed. By default, this set is empty such that no files are excluded.</description>
        </parameter>
        <parameter>
          <name>fieldVisibility</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The field visibility indicator for the fields of the generated class, as
string values of SpecificCompiler.FieldVisibility. The text is case
insensitive.</description>
        </parameter>
        <parameter>
          <name>gettersReturnOptional</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>The gettersReturnOptional parameter enables generating get... methods that
return an Optional of the requested type. This will replace the This works
ONLY on Java 8+</description>
        </parameter>
        <parameter>
          <name>imports</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>A list of files or directories that should be compiled first thus making them
importable by subsequently compiled schemas. Note that imported files should
not reference each other.</description>
        </parameter>
        <parameter>
          <name>includes</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>A set of Ant-like inclusion patterns used to select files from the source
directory for processing. By default, the pattern &lt;code&gt;**&amp;#47;*.avsc&lt;/code&gt;
is used to select grammar files.</description>
        </parameter>
        <parameter>
          <name>optionalGettersForNullableFieldsOnly</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>The optionalGettersForNullableFieldsOnly parameter works in conjunction with
gettersReturnOptional option. If it is set, Optional getters will be
generated only for fields that are nullable. If the field is mandatory,
regular getter will be generated. This works ONLY on Java 8+.</description>
        </parameter>
        <parameter>
          <name>outputDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The current Maven project.</description>
        </parameter>
        <parameter>
          <name>sourceDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The source directory of avro files. This directory is added to the classpath
at schema compiling time. All files can therefore be referenced as classpath
resources following the directory structure under the source directory.</description>
        </parameter>
        <parameter>
          <name>stringType</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The Java type to use for Avro strings. May be one of CharSequence, String or
Utf8. CharSequence by default.</description>
        </parameter>
        <parameter>
          <name>templateDirectory</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The directory (within the java classpath) that contains the velocity
templates to use for code generation. The default value points to the
templates included with the avro-maven-plugin.</description>
        </parameter>
        <parameter>
          <name>testExcludes</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>A set of Ant-like exclusion patterns used to prevent certain files from being
processed. By default, this set is empty such that no files are excluded.</description>
        </parameter>
        <parameter>
          <name>testIncludes</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>A set of Ant-like inclusion patterns used to select files from the source
directory for processing. By default, the pattern &lt;code&gt;**&amp;#47;*.avsc&lt;/code&gt;
is used to select grammar files.</description>
        </parameter>
        <parameter>
          <name>testOutputDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>testSourceDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>velocityToolsClassesNames</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>The qualified names of classes which the plugin will look up, instantiate
(through an empty constructor that must exist) and set up to be injected into
Velocity templates by Avro compiler.</description>
        </parameter>
      </parameters>
      <configuration>
        <createOptionalGetters implementation="boolean">${createOptionalGetters}</createOptionalGetters>
        <createSetters implementation="boolean" default-value="true"/>
        <customConversions implementation="java.lang.String[]">${customConversions}</customConversions>
        <customLogicalTypeFactories implementation="java.lang.String[]">${customLogicalTypeFactories}</customLogicalTypeFactories>
        <enableDecimalLogicalType implementation="boolean" default-value="false"/>
        <fieldVisibility implementation="java.lang.String" default-value="PRIVATE"/>
        <gettersReturnOptional implementation="boolean">${gettersReturnOptional}</gettersReturnOptional>
        <optionalGettersForNullableFieldsOnly implementation="boolean">${optionalGettersForNullableFieldsOnly}</optionalGettersForNullableFieldsOnly>
        <outputDirectory implementation="java.io.File" default-value="${project.build.directory}/generated-sources/avro">${outputDirectory}</outputDirectory>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <sourceDirectory implementation="java.io.File" default-value="${basedir}/src/main/avro">${sourceDirectory}</sourceDirectory>
        <stringType implementation="java.lang.String">${stringType}</stringType>
        <templateDirectory implementation="java.lang.String">${templateDirectory}</templateDirectory>
        <testOutputDirectory implementation="java.io.File" default-value="${project.build.directory}/generated-test-sources/avro">${outputDirectory}</testOutputDirectory>
        <testSourceDirectory implementation="java.io.File" default-value="${basedir}/src/test/avro">${sourceDirectory}</testSourceDirectory>
        <velocityToolsClassesNames implementation="java.lang.String[]">${velocityToolsClassesNames}</velocityToolsClassesNames>
      </configuration>
    </mojo>
  </mojos>
  <dependencies>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-core</artifactId>
      <type>jar</type>
      <version>3.3.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model</artifactId>
      <type>jar</type>
      <version>3.3.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-settings</artifactId>
      <type>jar</type>
      <version>3.3.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-settings-builder</artifactId>
      <type>jar</type>
      <version>3.3.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-builder-support</artifactId>
      <type>jar</type>
      <version>3.3.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-repository-metadata</artifactId>
      <type>jar</type>
      <version>3.3.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact</artifactId>
      <type>jar</type>
      <version>3.3.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <type>jar</type>
      <version>3.3.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model-builder</artifactId>
      <type>jar</type>
      <version>3.3.9</version>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <type>jar</type>
      <version>18.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-aether-provider</artifactId>
      <type>jar</type>
      <version>3.3.9</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.aether</groupId>
      <artifactId>aether-spi</artifactId>
      <type>jar</type>
      <version>1.0.2.v20150114</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.aether</groupId>
      <artifactId>aether-impl</artifactId>
      <type>jar</type>
      <version>1.0.2.v20150114</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.aether</groupId>
      <artifactId>aether-api</artifactId>
      <type>jar</type>
      <version>1.0.2.v20150114</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.aether</groupId>
      <artifactId>aether-util</artifactId>
      <type>jar</type>
      <version>1.0.2.v20150114</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.sisu</groupId>
      <artifactId>org.eclipse.sisu.plexus</artifactId>
      <type>jar</type>
      <version>0.3.2</version>
    </dependency>
    <dependency>
      <groupId>javax.enterprise</groupId>
      <artifactId>cdi-api</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>javax.annotation</groupId>
      <artifactId>jsr250-api</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.sisu</groupId>
      <artifactId>org.eclipse.sisu.inject</artifactId>
      <type>jar</type>
      <version>0.3.2</version>
    </dependency>
    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
      <type>jar</type>
      <version>4.0</version>
    </dependency>
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <type>jar</type>
      <version>1</version>
    </dependency>
    <dependency>
      <groupId>aopalliance</groupId>
      <artifactId>aopalliance</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-interpolation</artifactId>
      <type>jar</type>
      <version>1.21</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-classworlds</artifactId>
      <type>jar</type>
      <version>2.5.2</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-component-annotations</artifactId>
      <type>jar</type>
      <version>1.6</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.plexus</groupId>
      <artifactId>plexus-sec-dispatcher</artifactId>
      <type>jar</type>
      <version>1.3</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.plexus</groupId>
      <artifactId>plexus-cipher</artifactId>
      <type>jar</type>
      <version>1.4</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <type>jar</type>
      <version>3.4</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>file-management</artifactId>
      <type>jar</type>
      <version>3.1.0</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <type>jar</type>
      <version>2.11.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.avro</groupId>
      <artifactId>avro-compiler</artifactId>
      <type>jar</type>
      <version>1.11.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.avro</groupId>
      <artifactId>avro</artifactId>
      <type>jar</type>
      <version>1.11.1</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <type>jar</type>
      <version>2.12.7</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-compress</artifactId>
      <type>jar</type>
      <version>1.21</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-text</artifactId>
      <type>jar</type>
      <version>1.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.velocity</groupId>
      <artifactId>velocity-engine-core</artifactId>
      <type>jar</type>
      <version>2.3</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <type>jar</type>
      <version>2.12.7</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <type>jar</type>
      <version>2.12.7</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <type>jar</type>
      <version>1.7.36</version>
    </dependency>
  </dependencies>
</plugin>